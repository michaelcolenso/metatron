name: Deploy Portfolio Site

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # First, ensure the docs/images directory exists and is empty
      - name: Prepare images directory
        run: |
          rm -rf docs/images
          mkdir -p docs/images

      # Copy all images first
      - name: Copy images
        run: |
          cp -v images/* docs/images/
          echo "Images copied:"
          ls -la docs/images/

      # Now install dependencies for image optimization
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jpegoptim optipng
          echo "Installed image optimization tools"

      # Optimize images in place
      - name: Optimize images
        run: |
          echo "Optimizing JPEG images..."
          find docs/images/ -type f -name "*.jpg" -exec jpegoptim --max=85 {} \;
          echo "Optimizing PNG images..."
          find docs/images/ -type f -name "*.png" -exec optipng -quiet {} \;
          echo "Optimization complete. Final image sizes:"
          ls -lh docs/images/

      # Create a debug listing of all files
      - name: Debug file listing
        run: |
          echo "Content of docs directory:"
          ls -R docs/
          echo "File sizes:"
          du -h docs/images/*

      # Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3.8.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs
          force_orphan: true
          enable_jekyll: false
          full_commit_message: 'Deploy: ${{ github.event.head_commit.message }}'

      # Verify deployment content
      - name: Verify deployment
        run: |
          echo "Checking gh-pages branch content..."
          git fetch origin gh-pages
          git checkout gh-pages
          echo "Content of images directory in gh-pages:"
          ls -la images/ || echo "No images directory found in gh-pages"